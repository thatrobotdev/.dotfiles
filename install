#!/usr/bin/env bash

echo "Setting up your Mac..."

# Check for Homebrew and install if we don't have it
echo "Checking for Homebrew..."
if test ! $(which brew); then
  echo "Installing Homebrew..."
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Update Homebrew recipes
echo "Updating Homebrew recipes..."
brew update

# Install all our dependencies with bundle (See Brewfile)
echo "Installing all our dependencies with bundle..."
brew tap homebrew/bundle
brew bundle

# Install Oh My ZSH (https://github.com/ohmyzsh/ohmyzsh) if it isn't installed 
echo "Checking for Oh My ZSH..."

if [ ! -d $HOME/.oh-my-zsh ]; then
  echo "Installing Oh My ZSH..."
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
fi

# Dotbot
echo "Booting up Dotbot..."

set -e

CONFIG="install.conf.yaml"
DOTBOT_DIR="dotbot"

DOTBOT_BIN="bin/dotbot"
BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

cd "${BASEDIR}"
git -C "${DOTBOT_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${DOTBOT_DIR}"

"${BASEDIR}/${DOTBOT_DIR}/${DOTBOT_BIN}" -d "${BASEDIR}" -c "${CONFIG}" "${@}"

# Set global gitingore
echo "Setting global gitignore..."
git config --global core.excludesfile ~/.gitignore_global

# Restoring macOS configs with mackup
echo "Restoring macOS configs with mackup..."
mackup restore

echo "Ayy we good"
